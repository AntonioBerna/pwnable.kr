from pwn import *
import subprocess
import argparse
import os

def decompress_with_upx(flag, unpacked_flag):
    if os.path.exists(unpacked_flag): os.remove(unpacked_flag)
    
    try:
        with open(os.devnull, "w") as devnull:
            subprocess.run(["upx", "-d", flag, "-o", unpacked_flag], check=True, stdout=devnull, stderr=devnull)
    except subprocess.CalledProcessError as e:
        print(f"Error in decompression with UPX: {e}")
        exit(1)

def print_flag_from_output(output: str):
    for line in output.split("\n"):
        start_index = line.find("\"")
        end_index = line.rfind("\"")
        if start_index != -1 and end_index != -1 and start_index < end_index:
            flag = line[start_index + 1:end_index]
            log.success(f"Flag: \"{flag}\"")
            break

def extract_flag_from_gdb(unpacked_flag):
    # WARNING: I'm not add the `disassemble main` command because is useless in this automation code.
    # NOTE: The 0x6c2070 is the address of the flag.
    gdb_commands = b"""
    x/s *0x6c2070
    quit
    """
    
    gdb_process = process(["gdb", "-q", unpacked_flag])
    gdb_process.sendline(gdb_commands)
    gdb_process.wait_for_close()

    output: str = gdb_process.recvall().decode()
    print_flag_from_output(output)

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument(dest="flag", help="The UPX compressed file.")
    
    args = parser.parse_args()
    # print(args)

    unpacked_flag = "unpacked_" + args.flag

    decompress_with_upx(args.flag, unpacked_flag)
    extract_flag_from_gdb(unpacked_flag)

if __name__ == "__main__":
    main()
